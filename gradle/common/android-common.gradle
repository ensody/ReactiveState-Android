class Config {
    Integer minVersion = null
    Integer targetVersion = null
    Integer compileSdkVersion = null
    Boolean kotlinExplicitApiMode = false
}

def isMultiplatform = ["androidMain", "jvmMain", "commonMain"].any { project.file("src/$it").exists() }
if (!isMultiplatform) {
    apply plugin: 'kotlin-android'
}

ext.androidCommon = { args = [:] ->
    apply from: "$rootDir/gradle/common/kotlin-common.gradle"

    Config config = new Config(args)

    int minVersion = config.minVersion ?: 19
    int targetVersion = config.targetVersion ?: 30
    int compileVersion = config.compileSdkVersion ?: targetVersion

    kotlinCommon()

    android {
        compileSdkVersion compileVersion

        compileOptions {
            coreLibraryDesugaringEnabled true
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        if (!isMultiplatform) {
            kotlinOptions {
                jvmTarget = "1.8"
                freeCompilerArgs = getCompilerArgs(kotlinExplicitApiMode: config.kotlinExplicitApiMode)
            }
        }

        defaultConfig {
            minSdkVersion minVersion
            targetSdkVersion targetVersion
            versionCode 1
            versionName version

            // Required for coreLibraryDesugaring
            multiDexEnabled true

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

        testOptions {
            // Needed for Robolectric
            unitTests {
                includeAndroidResources = true
            }
        }

        packagingOptions {
            pickFirst 'META-INF/*.kotlin_module'
        }

        if (isMultiplatform) {
            sourceSets {
                main {
                    setRoot("src/androidMain")
                }
                release {
                    setRoot("src/androidMainRelease")
                }
                debug {
                    setRoot("src/androidMainDebug")
                }
                test {
                    setRoot("src/androidTest")
                }
                testRelease {
                    setRoot("src/androidTestRelease")
                }
                testDebug {
                    setRoot("src/androidTestDebug")
                }
                androidTest {
                    setRoot("src/androidUITest")
                }
                androidTestRelease {
                    setRoot("src/androidUITestRelease")
                }
                androidTestDebug {
                    setRoot("src/androidUITestDebug")
                }
            }
        }
    }

    dependencies {
        coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.1.5"
    }

    if (isMultiplatform) {
        allTests.dependsOn("testDebugUnitTest")
    }
}
