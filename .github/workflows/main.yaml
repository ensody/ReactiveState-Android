name: Test

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
  push:
    paths-ignore:
      - 'docs/**'

jobs:
  build:
    name: JDK ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java_version: [1.8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Install JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java_version }}
      - name: Configure Gradle
        run: ./gradlew help
      - name: Build project
        run: sudo ./gradlew assemble --stacktrace
      - name: Fix permissions
        run: sudo chown -R "$(whoami):$(whoami)" .
      - name: Run tests
        run: ./gradlew test --stacktrace
      - name: Final checks
        run: ./gradlew check --stacktrace

      - name: Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip
      - name: Upload the build report
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip

env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=true -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
